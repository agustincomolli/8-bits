// import CustomAlert from "../scripts/custom-alert";

// Obtener el elemento de entrada de n√∫mero de tel√©fono.
const contactPhone = document.querySelector("#contact-phone");


/* 

EXPRESI√ìN REGULAR PARA VALIDAR TEL√âFONOS DE ARGENTINA

^: Este s√≠mbolo representa el inicio de la cadena. Esto significa que la coincidencia debe 
comenzar al principio de la cadena de texto.

(?:(?:00)?549?)?: Esta parte es un grupo opcional. Permite n√∫meros de tel√©fono 
argentinos que comiencen con "0054" o "54", que es el c√≥digo de pa√≠s para Argentina. Los 
par√©ntesis (?: ... ) se utilizan para agrupar sin capturar. La parte 00 es opcional (el 
operador ? hace que algo sea opcional) y representa la opci√≥n de marcar "00" antes del 
c√≥digo de pa√≠s. Luego, "549" representa el c√≥digo de pa√≠s sin los ceros iniciales, y el 
√∫ltimo ? hace que esta parte sea opcional en su totalidad.

0?: Esto permite que haya un "0" opcional despu√©s del c√≥digo de pa√≠s. En Argentina, es 
com√∫n que los n√∫meros de tel√©fono comiencen con "0", por lo que este "0" es opcional.

(?:11|[2368]\d): Este grupo permite dos opciones para el prefijo de la ciudad. Puede 
ser "11" o un n√∫mero que comienza con "2", "3", "6" u "8", seguido de cualquier d√≠gito (\d). 
Estas son las √°reas de c√≥digo de √°rea de Buenos Aires y otras √°reas importantes en Argentina.

(?:(?=\d{0,2}15)\d{2})??: Este grupo es un poco m√°s complicado. Comprueba si 
despu√©s del c√≥digo de √°rea, hay una secuencia de 2 d√≠gitos que est√° seguida de "15". Los 
par√©ntesis ( ... )? indican que esto es opcional. El ?? al final significa que esto es 
tambi√©n opcional. En resumen, esto permite n√∫meros de tel√©fono que contienen "15" 
despu√©s del c√≥digo de √°rea, pero no lo requiere.

\d{8}: Esto representa exactamente 8 d√≠gitos para el n√∫mero de tel√©fono. La expresi√≥n 
regular valida que los d√≠gitos sean n√∫meros v√°lidos (0-9).

$: Este s√≠mbolo representa el final de la cadena. Esto significa que la coincidencia debe 
terminar al final de la cadena de texto.

En resumen, la expresi√≥n regular valida n√∫meros de tel√©fono en Argentina que pueden tener 
un c√≥digo de pa√≠s opcional (con o sin "00" antes de "54"), un "0" opcional despu√©s del c√≥digo 
de pa√≠s, un c√≥digo de √°rea v√°lido en Argentina, una secuencia de 2 d√≠gitos seguida de "15" 
opcionalmente y, finalmente, 8 d√≠gitos v√°lidos para el n√∫mero de tel√©fono. Esta expresi√≥n 
regular es bastante flexible y puede adaptarse a diferentes formatos de n√∫meros de tel√©fono 
en Argentina.
*/


/**
 * Valida un n√∫mero de tel√©fono en Argentina.
 *
 * @param {string} phoneNumber - El n√∫mero de tel√©fono a validar.
 * @returns {boolean} - Devuelve true si el n√∫mero de tel√©fono es v√°lido, de lo contrario, devuelve false.
 */
function isValidPhone(phoneNumber) {
    // Eliminar cualquier caracter no num√©rico de la cadena
    const onlyNumbers = phoneNumber.replace(/\D/g, '');

    // Patr√≥n de expresi√≥n regular para validar n√∫meros de tel√©fono en Argentina
    const phonePattern = /^(?:(?:00)?549?)?0?(?:11|[2368]\d)(?:(?=\d{0,2}15)\d{2})??\d{8}$/;

    // Comprobar si el n√∫mero coincide con el patr√≥n
    return phonePattern.test(onlyNumbers);
}


/**
 * Valida un campo de n√∫mero de tel√©fono en un formulario.
 *
 * @param {Event} event - El evento de env√≠o del formulario.
 */
function validatePhone() {
    // Comprobar si el n√∫mero de tel√©fono no es v√°lido utilizando una funci√≥n externa llamada isValidPhone.
    if (!isValidPhone(contactPhone.value)) {
        // Si el n√∫mero de tel√©fono no es v√°lido, establecer un mensaje de error personalizado.
        contactPhone.setCustomValidity("El n√∫mero de tel√©fono no es v√°lido");
    } else {
        // Si el n√∫mero de tel√©fono es v√°lido, restablecer cualquier mensaje de error personalizado anterior.
        contactPhone.setCustomValidity("");
    }

    // Reportar la validez del campo, lo que puede mostrar el mensaje de error personalizado.
    contactPhone.reportValidity();
}


async function submitForm(event) {
    // Prevenir el env√≠o del formulario.
    event.preventDefault();
    validatePhone();

    const dataContact = new FormData(this);
    const myAlert = new CustomAlert();
    const response = await fetch(this.action, {
        method: this.method,
        body: dataContact,
        headers: {
            "Accept": "application/json"
        }
    })
    if (response.ok) {
        this.reset();
        myAlert.title = "Su mensaje ha sido enviado exitosamente";
        myAlert.message = "¬°Gracias por contactarte con nosotros üòÄ!<br> Pronto nos comunicaremos con usted.";
    } else {
        myAlert.title = "Su mensaje no pudo enviarse";
        myAlert.message = "¬°Ups! Hubo un problema al enviar su formulario üò•";
    }
    myAlert.showAlert();
};

const formContact = document.querySelector("#form-contact");

formContact.addEventListener("submit", handleSubmit);
// Establece un listener para el evento "change" en el elemento contactPhone
// y restablece la validez personalizada del campo, lo que permite que el usuario
// corrija y vuelva a validar el campo despu√©s de realizar cambios.
contactPhone.addEventListener("change", () => {
    contactPhone.setCustomValidity("");
});


function handleSubmit(event) {
    event.preventDefault();
    // const myAlert = new CustomAlert();
    // myAlert.title = "Su mensaje ha sido enviado exitosamente";
    // myAlert.message = "¬°Gracias por contactarte con nosotros üòÄ!<br> Pronto nos comunicaremos con usted.";
    // myAlert.showAlert();
    alert("hola")
  }


/* 

// Test de funcionamiento de funci√≥n isValidPhone.
const testPhoneNumbers = [
    "+5492226680056",
    "(+54)902226815680056",
    "02226421577",
    "(2226)15680056",
    "2226680056"
];

for (phone of testPhoneNumbers) {
    console.log(`${phone} es ${isValidPhone(phone)}`);
};

 */